openapi: "3.0.0"
info:
    version: "1.0.0"
    title: "Whiesie API entry point"
    description: All APIs under same endpoint
servers:
    - url: "localhost:3000"
      description: "Local dev"

    - url: "https://api.whiesie.com/"
      description: "UAT"
paths:
    /oauth/login:
        post:
            tags:
                - oauth
            summary: Login
            requestBody:
                description: Login
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LogoutSchema"
            responses:
                200:
                    description: Ok
    /oauth/logout:
        post:
            tags:
                - oauth
            summary: Logout
            requestBody:
                description: Logout
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LogoutSchema"
            responses:
                200:
                    description: Ok
    /oauth/logout/global:
        post:
            tags:
                - oauth
            summary: Global Logout
            requestBody:
                description: Logout global
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LogoutSchema"
            responses:
                200:
                    description: Ok
    /oauth/signup:
        post:
            tags:
                - oauth
            summary: singup
            requestBody:
                description: Login
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/OauthBody"
            responses:
                200:
                    description: Ok
    /management:
        get:
            tags:
                - management
            summary: Get list of management request
            responses:
                200:
                    description: Ok
        post:
            tags:
                - management
            summary: Create new request
            requestBody:
                description: Post request
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ManagementBody"
            responses:
                200:
                    description: Ok
    /countries:
        get:
            tags:
                - countries
            summary: Get list of countries
            responses:
                200:
                    description: Ok
    /cities:
        get:
            tags:
                - cities
            summary: Get list of cities
            responses:
                200:
                    description: Ok
    /cities/{cityId}:
        parameters:
            - name: cityId
              description: City identifier
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/PathId"
        get:
            tags:
                - cities
            summary: Get list of cities
            responses:
                200:
                    description: Ok
    /universities:
        get:
            tags:
                - universities
            summary: Get list of universities
            responses:
                200:
                    description: Ok
    /travels:
        get:
            tags:
                - travels
            summary: Get list of travels
            responses:
                200:
                    description: Ok
    /activities:
        get:
            tags:
                - activities
            summary: Get list of activities.
            responses:
                200:
                    description: Ok
    /spacecrafts/{spacecraftId}:
        parameters:
            - name: spacecraftId
              description: The unique identifier of the spacecraft
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/SpacecraftId"
        get:
            summary: Read a spacecraft
            responses:
                "200":
                    description: The spacecraft corresponding to the provided `spacecraftId`
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Spacecraft"
                404:
                    description: No spacecraft found for the provided `spacecraftId`
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                500:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
components:
    schemas:
        PathId:
            description: The unique identifier of the path
            type: string
        LogoutSchema:
            type: object
            properties:
                data:
                    type: object
                    example: {}
                model:
                    type: string
                    example: "countries"
        OauthBody:
            type: object
            properties:
                data:
                    type: object
                    example: {}
                model:
                    type: string
                    example: "countries"
        ManagementBody:
            type: object
            properties:
                email:
                    type: string
                    example: "raul"
                password:
                    type: string
                    example: "passwd"
        SpacecraftId:
            description: The unique identifier of a spacecraft
            type: string
        Spacecraft:
            type: object
            required:
                - id
                - name
                - type
            properties:
                id:
                    $ref: "#/components/schemas/SpacecraftId"
                name:
                    type: string
                type:
                    type: string
                    enum:
                        - capsule
                        - probe
                        - satellite
                        - spaceplane
                        - station
                description:
                    type: string
        Error:
            type: object
            required:
                - message
            properties:
                message:
                    description: A human readable error message
                    type: string
